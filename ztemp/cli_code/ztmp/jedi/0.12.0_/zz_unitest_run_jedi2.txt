import jedi




jedi._compatibility.DummyFile(=a1,=a2,=a3)


jedi._compatibility.FileNotFoundError(=a1)


jedi._compatibility.GeneralizedPopen(=a1)




jedi._compatibility.ImplicitNSInfo(=a1,=a2,=a3)


jedi._compatibility.NotADirectoryError(=a1)




jedi._compatibility.Parameter(=a1,=a2,=a3)



jedi._compatibility.Python3Method(=a1,=a2)



jedi._compatibility._iter_modules(=a1,=a2)


jedi._compatibility.cast_path(=a1)




jedi._compatibility.find_module(=a1,=a2,=a3)




jedi._compatibility.find_module_pre_py33(=a1,=a2,=a3)





jedi._compatibility.find_module_py33(=a1,=a2,=a3,=a4)




jedi._compatibility.find_module_py34(=a4,=a5,=a6)


jedi._compatibility.force_unicode(=a1)



jedi._compatibility.iter_modules(=a3,=a4)


jedi._compatibility.literal_eval(=a1)


jedi._compatibility.no_unicode_pprint(=a1)



jedi._compatibility.pickle_dump(=a1,=a2)


jedi._compatibility.pickle_load(=a1)



jedi._compatibility.reraise(=a1,=a2)



jedi._compatibility.u(=a1,=a2)


jedi._compatibility.unicode(=a1)


jedi._compatibility.use_metaclass(=a1)


jedi._compatibility.utf8_repr(=a1)


jedi._compatibility.zip_longest(=a1)







jedi.api.Completion(=a1,=a2,=a3,=a4,=a5,=a6)





jedi.api.Evaluator(=a1,=a2,=a3,=a4)




jedi.api.Interpreter(=a1,=a2,=a3)


jedi.api.InterpreterEnvironment(=a1)






jedi.api.ModuleContext(=a1,=a2,=a3,=a4,=a5)




jedi.api.ParamName(=a1,=a2,=a3)









jedi.api.Script(=a1,=a2,=a3,=a4,=a5,=a6,=a7,=a8)




jedi.api.TreeNameDefinition(=a1,=a2,=a3)




jedi.api.classes.BaseDefinition(=a1,=a2,=a3)







jedi.api.classes.CallSignature(=a1,=a2,=a3,=a4,=a5,=a6)





jedi.api.classes.ClassContext(=a1,=a2,=a3,=a4)






jedi.api.classes.Completion(=a7,=a8,=a9,=a10,=a11)




jedi.api.classes.Definition(=a1,=a2,=a3)





jedi.api.classes.FunctionContext(=a1,=a2,=a3,=a4)






jedi.api.classes.FunctionExecutionContext(=a1,=a2,=a3,=a4,=a5)




jedi.api.classes.ImportName(=a1,=a2,=a3)




jedi.api.classes.KeywordName(=a1,=a2,=a3)



jedi.api.classes._Help(=a1,=a2)


jedi.api.classes._sort_names_by_start_pos(=a1)



jedi.api.classes.defined_names(=a1,=a2)


jedi.api.classes.memoize_method(=a1)


jedi.api.classes.search_ancestor(=a1)


jedi.api.classes.unite(=a1)







jedi.api.completion.Completion(=a12,=a13,=a14,=a15,=a16,=a17)





jedi.api.completion.Leaf(=a1,=a2,=a3,=a4)




jedi.api.completion.Parameter(=a4,=a5,=a6)




jedi.api.completion.evaluate_call_of_leaf(=a1,=a2,=a3)





jedi.api.completion.filter_names(=a1,=a2,=a3,=a4)


jedi.api.completion.get_call_signature_param_names(=a1)



jedi.api.completion.get_flow_scope_node(=a1,=a2)





jedi.api.completion.get_global_filters(=a1,=a2,=a3,=a4)



jedi.api.completion.get_statement_of_position(=a1,=a2)



jedi.api.completion.get_user_scope(=a1,=a2)


jedi.api.completion.search_ancestor(=a2)



jedi.api.dotted_path_in_sys_path(=a1,=a2)




jedi.api.environment.Environment(=a1,=a2,=a3)



jedi.api.environment.EvaluatorSameProcess(=a1,=a2)




jedi.api.environment.EvaluatorSubprocess(=a1,=a2,=a3)


jedi.api.environment.GeneralizedPopen(=a2)


jedi.api.environment.InterpreterEnvironment(=a2)


jedi.api.environment.InvalidPythonEnvironment(=a1)


jedi.api.environment.SameEnvironment(=a1)


jedi.api.environment._BaseEnvironment(=a1)


jedi.api.environment._VersionInfo(=a1)





jedi.api.environment._VersionInfo._make(=a1,=a2,=a3,=a4)


jedi.api.environment._calculate_sha256_for_file(=a1)



jedi.api.environment._get_executable_path(=a1,=a2)


jedi.api.environment._get_executables_from_windows_registry(=a1)


jedi.api.environment._get_python_prefix(=a1)


jedi.api.environment._is_safe(=a1)


jedi.api.environment._is_unix_safe_simple(=a1)



jedi.api.environment.create_environment(=a1,=a2)



jedi.api.environment.find_executable(=a1,=a2)


jedi.api.environment.find_virtualenvs(=a1)


jedi.api.environment.get_subprocess(=a1)


jedi.api.environment.get_system_environment(=a1)


jedi.api.environment.memoize_method(=a2)



jedi.api.environment.namedtuple(=a1,=a2)


jedi.api.environment.time_cache(=a1)




jedi.api.evaluate_call_of_leaf(=a4,=a5,=a6)


jedi.api.exceptions.InternalError(=a1)


jedi.api.exceptions.WrongVersion(=a1)


jedi.api.exceptions._JediError(=a1)


jedi.api.force_unicode(=a2)


jedi.api.get_default_project(=a1)



jedi.api.get_executable_nodes(=a1,=a2)



jedi.api.get_module_names(=a1,=a2)


jedi.api.helpers.CallSignatureDetails(=a1)





jedi.api.helpers.CallSignatureDetails._make(=a5,=a6,=a7,=a8)


jedi.api.helpers.CompletionParts(=a1)





jedi.api.helpers.CompletionParts._make(=a9,=a10,=a11,=a12)


jedi.api.helpers.ContextSet(=a1)



jedi.api.helpers.ContextSet.from_iterable(=a1,=a2)



jedi.api.helpers.ContextSet.from_set(=a1,=a2)



jedi.api.helpers.ContextSet.from_sets(=a1,=a2)


jedi.api.helpers.OnErrorLeaf(=a1)





jedi.api.helpers.Parser(=a1,=a2,=a3,=a4)


jedi.api.helpers.Stack(=a1)



jedi.api.helpers._get_call_signature_details_from_error_node(=a1,=a2)




jedi.api.helpers._get_code(=a1,=a2,=a3)




jedi.api.helpers._get_code_for_stack(=a1,=a2,=a3)



jedi.api.helpers._get_index_and_key(=a1,=a2)


jedi.api.helpers.call_signature_time_cache(=a1)


jedi.api.helpers.dedent(=a1)



jedi.api.helpers.eval_atom(=a1,=a2)




jedi.api.helpers.evaluate_call_of_leaf(=a7,=a8,=a9)




jedi.api.helpers.evaluate_goto_definition(=a1,=a2,=a3)



jedi.api.helpers.get_call_signature_details(=a1,=a2)




jedi.api.helpers.get_on_completion_name(=a1,=a2,=a3)



jedi.api.helpers.get_possible_completion_types(=a1,=a2)





jedi.api.helpers.get_stack_at_position(=a1,=a2,=a3,=a4)


jedi.api.helpers.get_string_context_set(=a1)



jedi.api.helpers.namedtuple(=a3,=a4)


jedi.api.helpers.sorted_definitions(=a1)



jedi.api.helpers.u(=a3,=a4)




jedi.api.interpreter.Context(=a1,=a2,=a3)







jedi.api.interpreter.MixedModuleContext(=a1,=a2,=a3,=a4,=a5,=a6)






jedi.api.interpreter.ModuleContext(=a6,=a7,=a8,=a9,=a10)



jedi.api.interpreter.NamespaceObject(=a1,=a2)



jedi.api.interpreter._create(=a1,=a2)



jedi.api.interpreter.create_access_path(=a1,=a2)


jedi.api.keywords.AbstractNameDefinition(=a1)





jedi.api.keywords.Keyword(=a1,=a2,=a3,=a4)




jedi.api.keywords.KeywordName(=a4,=a5,=a6)




jedi.api.keywords.get_operator(=a1,=a2,=a3)


jedi.api.keywords.imitate_pydoc(=a1)








jedi.api.names(=a1,=a2,=a3,=a4,=a5,=a6,=a7)


jedi.api.project.FileNotFoundError(=a2)


jedi.api.project.NotADirectoryError(=a2)



jedi.api.project.Project(=a1,=a2)



jedi.api.project.Project.load(=a1,=a2)


jedi.api.project.SameEnvironment(=a2)


jedi.api.project.WrongVersion(=a2)


jedi.api.project._force_unicode_list(=a1)


jedi.api.project._is_django_path(=a1)


jedi.api.project._is_potential_project(=a1)


jedi.api.project._remove_duplicates_from_path(=a1)



jedi.api.project.discover_buildout_paths(=a1,=a2)


jedi.api.project.force_unicode(=a3)


jedi.api.project.get_default_project(=a2)



jedi.api.project.traverse_parents(=a1,=a2)





jedi.api.set_debug_function(=a1,=a2,=a3,=a4)




jedi.api.tree_name_to_contexts(=a1,=a2,=a3)



jedi.api.try_iter_content(=a1,=a2)




jedi.api.unpack_tuple_to_dict(=a1,=a2,=a3)


jedi.cache.call_signature_time_cache(=a2)


jedi.cache.clear_time_caches(=a1)


jedi.cache.memoize_method(=a3)


jedi.cache.time_cache(=a2)


jedi.cache.underscore_memoization(=a1)




jedi.cache.wraps(=a1,=a2,=a3)




jedi.common.BaseContext(=a1,=a2,=a3)


jedi.common.BaseContextSet(=a1)



jedi.common.BaseContextSet.from_iterable(=a3,=a4)



jedi.common.BaseContextSet.from_set(=a3,=a4)



jedi.common.BaseContextSet.from_sets(=a3,=a4)




jedi.common.context.BaseContext(=a4,=a5,=a6)


jedi.common.context.BaseContextSet(=a2)



jedi.common.context.BaseContextSet.from_iterable(=a5,=a6)



jedi.common.context.BaseContextSet.from_set(=a5,=a6)



jedi.common.context.BaseContextSet.from_sets(=a5,=a6)



jedi.common.utils.traverse_parents(=a3,=a4)


jedi.debug.Fore(=a1)


jedi.debug.dbg(=a1)


jedi.debug.increase_indent(=a1)



jedi.debug.print_to_stdout(=a1,=a2)


jedi.debug.speed(=a1)



jedi.debug.u(=a5,=a6)


jedi.debug.warning(=a1)





jedi.evaluate.AnonymousInstance(=a1,=a2,=a3,=a4)





jedi.evaluate.BoundMethod(=a1,=a2,=a3,=a4)





jedi.evaluate.ClassContext(=a5,=a6,=a7,=a8)





jedi.evaluate.CompForContext(=a1,=a2,=a3,=a4)




jedi.evaluate.CompForContext.from_comp_for(=a1,=a2,=a3)


jedi.evaluate.ContextSet(=a2)



jedi.evaluate.ContextSet.from_iterable(=a7,=a8)



jedi.evaluate.ContextSet.from_set(=a7,=a8)



jedi.evaluate.ContextSet.from_sets(=a7,=a8)




jedi.evaluate.ContextualizedName(=a1,=a2,=a3)




jedi.evaluate.ContextualizedNode(=a1,=a2,=a3)





jedi.evaluate.Evaluator(=a5,=a6,=a7,=a8)





jedi.evaluate.FunctionContext(=a5,=a6,=a7,=a8)




jedi.evaluate.ParamName(=a4,=a5,=a6)




jedi.evaluate.TreeNameDefinition(=a4,=a5,=a6)






jedi.evaluate.analysis.CompiledObject(=a1,=a2,=a3,=a4,=a5)






jedi.evaluate.analysis.Error(=a1,=a2,=a3,=a4,=a5)






jedi.evaluate.analysis.Warning(=a1,=a2,=a3,=a4,=a5)





jedi.evaluate.analysis._check_for_exception_catch(=a1,=a2,=a3,=a4)


jedi.evaluate.analysis._check_for_setattr(=a1)







jedi.evaluate.analysis.add(=a1,=a2,=a3,=a4,=a5,=a6)




jedi.evaluate.analysis.add_attribute_error(=a1,=a2,=a3)


jedi.evaluate.analysis.force_unicode(=a4)


jedi.evaluate.analysis.is_string(=a1)


jedi.evaluate.arguments.AbstractArguments(=a1)


jedi.evaluate.arguments.AnonymousArguments(=a1)





jedi.evaluate.arguments.ExecutedParam(=a1,=a2,=a3,=a4)



jedi.evaluate.arguments.LazyKnownContext(=a1,=a2)



jedi.evaluate.arguments.LazyKnownContexts(=a1,=a2)




jedi.evaluate.arguments.LazyTreeContext(=a1,=a2,=a3)




jedi.evaluate.arguments.ParamName(=a7,=a8,=a9)






jedi.evaluate.arguments.TreeArguments(=a1,=a2,=a3,=a4,=a5)



jedi.evaluate.arguments.ValuesArguments(=a1,=a2)





jedi.evaluate.arguments._iterate_star_args(=a1,=a2,=a3,=a4)





jedi.evaluate.arguments._star_star_dict(=a1,=a2,=a3,=a4)


jedi.evaluate.arguments.get_merged_lazy_context(=a1)



jedi.evaluate.arguments.get_params(=a1,=a2)



jedi.evaluate.arguments.try_iter_content(=a3,=a4)


jedi.evaluate.arguments.zip_longest(=a2)




jedi.evaluate.base_context.BaseContext(=a7,=a8,=a9)


jedi.evaluate.base_context.BaseContextSet(=a3)



jedi.evaluate.base_context.BaseContextSet.from_iterable(=a9,=a10)



jedi.evaluate.base_context.BaseContextSet.from_set(=a9,=a10)



jedi.evaluate.base_context.BaseContextSet.from_sets(=a9,=a10)



jedi.evaluate.base_context.CompFor(=a1,=a2)




jedi.evaluate.base_context.Context(=a4,=a5,=a6)


jedi.evaluate.base_context.ContextSet(=a3)



jedi.evaluate.base_context.ContextSet.from_iterable(=a11,=a12)



jedi.evaluate.base_context.ContextSet.from_set(=a11,=a12)



jedi.evaluate.base_context.ContextSet.from_sets(=a11,=a12)




jedi.evaluate.base_context.ContextualizedName(=a4,=a5,=a6)




jedi.evaluate.base_context.ContextualizedNode(=a4,=a5,=a6)



jedi.evaluate.base_context.ExprStmt(=a1,=a2)



jedi.evaluate.base_context.Python3Method(=a3,=a4)




jedi.evaluate.base_context.TreeContext(=a1,=a2,=a3)


jedi.evaluate.base_context.clean_scope_docstring(=a1)


jedi.evaluate.base_context.get_doc_with_call_signature(=a1)




jedi.evaluate.base_context.iterate_contexts(=a1,=a2,=a3)


jedi.evaluate.base_context.iterator_to_context_set(=a1)


jedi.evaluate.base_context.unicode(=a2)


jedi.evaluate.base_context.zip_longest(=a3)


jedi.evaluate.cache.CachedMetaClass(=a1)




jedi.evaluate.cache._memoize_default(=a1,=a2,=a3)


jedi.evaluate.cache.evaluator_function_cache(=a1)


jedi.evaluate.cache.evaluator_method_cache(=a1)




jedi.evaluate.check_tuple_assignments(=a1,=a2,=a3)




jedi.evaluate.compiled.CompiledContextName(=a1,=a2,=a3)





jedi.evaluate.compiled.CompiledName(=a1,=a2,=a3,=a4)






jedi.evaluate.compiled.CompiledObject(=a6,=a7,=a8,=a9,=a10)





jedi.evaluate.compiled.CompiledObjectFilter(=a1,=a2,=a3,=a4)



jedi.evaluate.compiled.access.AccessPath(=a1,=a2)


jedi.evaluate.compiled.access.AsyncGeneratorType(=a1)


jedi.evaluate.compiled.access.ClassMethodDescriptorType(=a1)


jedi.evaluate.compiled.access.CoroutineType(=a1)




jedi.evaluate.compiled.access.DirectObjectAccess(=a1,=a2,=a3)


jedi.evaluate.compiled.access.MethodDescriptorType(=a1)


jedi.evaluate.compiled.access.SignatureParam(=a1)





jedi.evaluate.compiled.access.SignatureParam._make(=a13,=a14,=a15,=a16)


jedi.evaluate.compiled.access.WrapperDescriptorType(=a1)


jedi.evaluate.compiled.access._SPECIAL_OBJECTS(=a1)


jedi.evaluate.compiled.access._a_generator(=a1)


jedi.evaluate.compiled.access._force_unicode_decorator(=a1)


jedi.evaluate.compiled.access._is_class_instance(=a1)


jedi.evaluate.compiled.access.compiled_objects_cache(=a1)



jedi.evaluate.compiled.access.create_access(=a1,=a2)



jedi.evaluate.compiled.access.create_access_path(=a3,=a4)


jedi.evaluate.compiled.access.dedent(=a2)



jedi.evaluate.compiled.access.dotted_from_fs_path(=a1,=a2)


jedi.evaluate.compiled.access.force_unicode(=a5)



jedi.evaluate.compiled.access.get_special_object(=a1,=a2)




jedi.evaluate.compiled.access.getattr_static(=a1,=a2,=a3)





jedi.evaluate.compiled.access.load_module(=a1,=a2,=a3,=a4)



jedi.evaluate.compiled.access.namedtuple(=a5,=a6)




jedi.evaluate.compiled.access.safe_getattr(=a1,=a2,=a3)


jedi.evaluate.compiled.access.unicode(=a3)



jedi.evaluate.compiled.builtin_from_name(=a1,=a2)


jedi.evaluate.compiled.context.AbstractFilter(=a1)


jedi.evaluate.compiled.context.AbstractNameDefinition(=a2)



jedi.evaluate.compiled.context.CheckAttribute(=a1,=a2)




jedi.evaluate.compiled.context.CompiledContextName(=a4,=a5,=a6)





jedi.evaluate.compiled.context.CompiledName(=a5,=a6,=a7,=a8)






jedi.evaluate.compiled.context.CompiledObject(=a11,=a12,=a13,=a14,=a15)





jedi.evaluate.compiled.context.CompiledObjectFilter(=a5,=a6,=a7,=a8)




jedi.evaluate.compiled.context.Context(=a7,=a8,=a9)


jedi.evaluate.compiled.context.ContextNameMixin(=a1)


jedi.evaluate.compiled.context.ContextSet(=a4)



jedi.evaluate.compiled.context.ContextSet.from_iterable(=a13,=a14)



jedi.evaluate.compiled.context.ContextSet.from_set(=a13,=a14)



jedi.evaluate.compiled.context.ContextSet.from_sets(=a13,=a14)




jedi.evaluate.compiled.context.EmptyCompiledName(=a1,=a2,=a3)



jedi.evaluate.compiled.context.LazyKnownContext(=a3,=a4)




jedi.evaluate.compiled.context.Parameter(=a7,=a8,=a9)




jedi.evaluate.compiled.context.SignatureParamName(=a1,=a2,=a3)




jedi.evaluate.compiled.context.UnresolvableParamName(=a1,=a2,=a3)


jedi.evaluate.compiled.context._normalize_create_args(=a1)


jedi.evaluate.compiled.context._parse_function_doc(=a1)





jedi.evaluate.compiled.context.create_cached_compiled_object(=a1,=a2,=a3,=a4)



jedi.evaluate.compiled.context.create_from_access_path(=a1,=a2)




jedi.evaluate.compiled.context.create_from_name(=a1,=a2,=a3)


jedi.evaluate.compiled.context.evaluator_function_cache(=a2)


jedi.evaluate.compiled.context.force_unicode(=a6)


jedi.evaluate.compiled.context.memoize_method(=a4)


jedi.evaluate.compiled.context.partial(=a1)


jedi.evaluate.compiled.context.underscore_memoization(=a2)



jedi.evaluate.compiled.create_from_access_path(=a3,=a4)




jedi.evaluate.compiled.create_from_name(=a4,=a5,=a6)



jedi.evaluate.compiled.create_simple_object(=a1,=a2)


jedi.evaluate.compiled.fake.FakeDoesNotExist(=a1)



jedi.evaluate.compiled.fake._load_faked_module(=a1,=a2)



jedi.evaluate.compiled.fake._search_scope(=a1,=a2)


jedi.evaluate.compiled.fake.chain(=a1)



jedi.evaluate.compiled.fake.get_faked_module(=a1,=a2)



jedi.evaluate.compiled.fake.get_faked_with_parent_context(=a1,=a2)


jedi.evaluate.compiled.fake.unicode(=a4)



jedi.evaluate.compiled.get_special_object(=a3,=a4)


jedi.evaluate.compiled.get_string_context_set(=a2)



jedi.evaluate.compiled.getattr_static._check_class(=a1,=a2)



jedi.evaluate.compiled.getattr_static._check_instance(=a1,=a2)


jedi.evaluate.compiled.getattr_static._get_type(=a1)


jedi.evaluate.compiled.getattr_static._is_type(=a1)



jedi.evaluate.compiled.getattr_static._safe_hasattr(=a1,=a2)


jedi.evaluate.compiled.getattr_static._safe_is_data_descriptor(=a1)


jedi.evaluate.compiled.getattr_static._shadowed_dict(=a1)


jedi.evaluate.compiled.getattr_static._shadowed_dict_newstyle(=a2)


jedi.evaluate.compiled.getattr_static._static_getmro(=a1)


jedi.evaluate.compiled.getattr_static._static_getmro_newstyle(=a2)




jedi.evaluate.compiled.getattr_static.getattr_static(=a4,=a5,=a6)


jedi.evaluate.compiled.load_module(=a5)




jedi.evaluate.compiled.mixed.Context(=a10,=a11,=a12)


jedi.evaluate.compiled.mixed.ContextSet(=a5)



jedi.evaluate.compiled.mixed.ContextSet.from_iterable(=a15,=a16)



jedi.evaluate.compiled.mixed.ContextSet.from_set(=a15,=a16)



jedi.evaluate.compiled.mixed.ContextSet.from_sets(=a15,=a16)





jedi.evaluate.compiled.mixed.MixedName(=a1,=a2,=a3,=a4)






jedi.evaluate.compiled.mixed.MixedObject(=a1,=a2,=a3,=a4,=a5)





jedi.evaluate.compiled.mixed.MixedObjectFilter(=a1,=a2,=a3,=a4)






jedi.evaluate.compiled.mixed.ModuleContext(=a11,=a12,=a13,=a14,=a15)




jedi.evaluate.compiled.mixed._create(=a5,=a6,=a7)



jedi.evaluate.compiled.mixed._find_syntax_node_name(=a1,=a2)


jedi.evaluate.compiled.mixed._get_object_to_check(=a1)


jedi.evaluate.compiled.mixed._load_module(=a8)


jedi.evaluate.compiled.mixed.compiled_objects_cache(=a2)





jedi.evaluate.compiled.mixed.create_cached_compiled_object(=a9,=a10,=a11,=a12)


jedi.evaluate.compiled.mixed.evaluator_function_cache(=a3)



jedi.evaluate.compiled.mixed.get_cached_code_lines(=a1,=a2)




jedi.evaluate.compiled.mixed.getattr_static(=a7,=a8,=a9)


jedi.evaluate.compiled.mixed.underscore_memoization(=a3)





jedi.evaluate.compiled.subprocess.AccessHandle(=a1,=a2,=a3,=a4)



jedi.evaluate.compiled.subprocess.AccessPath(=a3,=a4)




jedi.evaluate.compiled.subprocess.DirectObjectAccess(=a4,=a5,=a6)



jedi.evaluate.compiled.subprocess.EvaluatorSameProcess(=a3,=a4)




jedi.evaluate.compiled.subprocess.EvaluatorSubprocess(=a4,=a5,=a6)


jedi.evaluate.compiled.subprocess.GeneralizedPopen(=a3)


jedi.evaluate.compiled.subprocess.InternalError(=a2)


jedi.evaluate.compiled.subprocess.Listener(=a1)


jedi.evaluate.compiled.subprocess.SignatureParam(=a2)





jedi.evaluate.compiled.subprocess.SignatureParam._make(=a17,=a18,=a19,=a20)



jedi.evaluate.compiled.subprocess._CompiledSubprocess(=a1,=a2)



jedi.evaluate.compiled.subprocess._EvaluatorProcess(=a1,=a2)


jedi.evaluate.compiled.subprocess._get_function(=a1)


jedi.evaluate.compiled.subprocess.force_unicode(=a7)


jedi.evaluate.compiled.subprocess.functions._get_init_path(=a1)




jedi.evaluate.compiled.subprocess.functions._test_print(=a1,=a2,=a3)



jedi.evaluate.compiled.subprocess.functions._test_raise_error(=a1,=a2)


jedi.evaluate.compiled.subprocess.functions.cast_path(=a2)



jedi.evaluate.compiled.subprocess.functions.create_simple_object(=a3,=a4)




jedi.evaluate.compiled.subprocess.functions.find_module(=a7,=a8,=a9)


jedi.evaluate.compiled.subprocess.functions.force_unicode(=a8)


jedi.evaluate.compiled.subprocess.functions.get_builtin_module_names(=a1)




jedi.evaluate.compiled.subprocess.functions.get_compiled_method_return(=a1,=a2,=a3)




jedi.evaluate.compiled.subprocess.functions.get_module_info(=a1,=a2,=a3)



jedi.evaluate.compiled.subprocess.functions.get_special_object(=a5,=a6)



jedi.evaluate.compiled.subprocess.functions.iter_modules(=a5,=a6)



jedi.evaluate.compiled.subprocess.functions.list_module_names(=a1,=a2)


jedi.evaluate.compiled.subprocess.functions.load_module(=a6)



jedi.evaluate.compiled.subprocess.functions.safe_literal_eval(=a1,=a2)


jedi.evaluate.compiled.subprocess.get_subprocess(=a2)


jedi.evaluate.compiled.subprocess.memoize_method(=a5)


jedi.evaluate.compiled.subprocess.partial(=a2)



jedi.evaluate.compiled.subprocess.pickle_dump(=a3,=a4)


jedi.evaluate.compiled.subprocess.pickle_load(=a2)


jedi.evaluate.compiled.unicode(=a5)






jedi.evaluate.context.AbstractInstanceContext(=a1,=a2,=a3,=a4,=a5)





jedi.evaluate.context.AnonymousInstance(=a5,=a6,=a7,=a8)





jedi.evaluate.context.BoundMethod(=a5,=a6,=a7,=a8)





jedi.evaluate.context.ClassContext(=a9,=a10,=a11,=a12)


jedi.evaluate.context.CompiledInstance(=a1)





jedi.evaluate.context.FunctionContext(=a9,=a10,=a11,=a12)






jedi.evaluate.context.FunctionExecutionContext(=a6,=a7,=a8,=a9,=a10)






jedi.evaluate.context.ModuleContext(=a16,=a17,=a18,=a19,=a20)






jedi.evaluate.context.TreeInstance(=a1,=a2,=a3,=a4,=a5)




jedi.evaluate.context.asynchronous.AsyncBase(=a1,=a2,=a3)




jedi.evaluate.context.asynchronous.AsyncGenerator(=a1,=a2,=a3)



jedi.evaluate.context.asynchronous.BuiltinOverwrite(=a1,=a2)


jedi.evaluate.context.asynchronous.ContextSet(=a6)



jedi.evaluate.context.asynchronous.ContextSet.from_iterable(=a17,=a18)



jedi.evaluate.context.asynchronous.ContextSet.from_set(=a17,=a18)



jedi.evaluate.context.asynchronous.ContextSet.from_sets(=a17,=a18)




jedi.evaluate.context.asynchronous.Coroutine(=a1,=a2,=a3)




jedi.evaluate.context.asynchronous.CoroutineWrapper(=a1,=a2,=a3)



jedi.evaluate.context.asynchronous.publish_method(=a1,=a2)


jedi.evaluate.context.function.AbstractNameDefinition(=a3)


jedi.evaluate.context.function.AnonymousArguments(=a2)


jedi.evaluate.context.function.CachedMetaClass(=a2)




jedi.evaluate.context.function.ContextName(=a1,=a2,=a3)


jedi.evaluate.context.function.ContextSet(=a7)



jedi.evaluate.context.function.ContextSet.from_iterable(=a19,=a20)



jedi.evaluate.context.function.ContextSet.from_set(=a19,=a20)



jedi.evaluate.context.function.ContextSet.from_sets(=a19,=a20)




jedi.evaluate.context.function.ContextualizedNode(=a7,=a8,=a9)





jedi.evaluate.context.function.FunctionContext(=a13,=a14,=a15,=a16)






jedi.evaluate.context.function.FunctionExecutionContext(=a11,=a12,=a13,=a14,=a15)







jedi.evaluate.context.function.FunctionExecutionFilter(=a1,=a2,=a3,=a4,=a5,=a6)



jedi.evaluate.context.function.LambdaName(=a1,=a2)



jedi.evaluate.context.function.LazyKnownContext(=a5,=a6)



jedi.evaluate.context.function.LazyKnownContexts(=a3,=a4)




jedi.evaluate.context.function.LazyTreeContext(=a4,=a5,=a6)




jedi.evaluate.context.function.ParamName(=a10,=a11,=a12)







jedi.evaluate.context.function.ParserTreeFilter(=a1,=a2,=a3,=a4,=a5,=a6)




jedi.evaluate.context.function.TreeContext(=a4,=a5,=a6)


jedi.evaluate.context.function.evaluator_method_cache(=a2)


jedi.evaluate.context.function.get_yield_exprs(=a13)


jedi.evaluate.context.function.use_metaclass(=a2)


jedi.evaluate.context.instance.AbstractArguments(=a2)






jedi.evaluate.context.instance.AbstractInstanceContext(=a6,=a7,=a8,=a9,=a10)


jedi.evaluate.context.instance.AnonymousArguments(=a3)





jedi.evaluate.context.instance.AnonymousInstance(=a9,=a10,=a11,=a12)






jedi.evaluate.context.instance.AnonymousInstanceFunctionExecution(=a1,=a2,=a3,=a4,=a5)



jedi.evaluate.context.instance.BaseInstanceFunctionExecution(=a1,=a2)





jedi.evaluate.context.instance.BoundMethod(=a9,=a10,=a11,=a12)





jedi.evaluate.context.instance.ClassContext(=a13,=a14,=a15,=a16)



jedi.evaluate.context.instance.CompiledBoundMethod(=a1,=a2)


jedi.evaluate.context.instance.CompiledInstance(=a2)





jedi.evaluate.context.instance.CompiledInstanceClassFilter(=a1,=a2,=a3,=a4)






jedi.evaluate.context.instance.CompiledInstanceName(=a1,=a2,=a3,=a4,=a5)




jedi.evaluate.context.instance.Context(=a13,=a14,=a15)


jedi.evaluate.context.instance.ContextSet(=a8)



jedi.evaluate.context.instance.ContextSet.from_iterable(=a21,=a22)



jedi.evaluate.context.instance.ContextSet.from_set(=a21,=a22)



jedi.evaluate.context.instance.ContextSet.from_sets(=a21,=a22)





jedi.evaluate.context.instance.FunctionContext(=a17,=a18,=a19,=a20)






jedi.evaluate.context.instance.FunctionExecutionContext(=a16,=a17,=a18,=a19,=a20)






jedi.evaluate.context.instance.InstanceClassFilter(=a1,=a2,=a3,=a4,=a5)






jedi.evaluate.context.instance.InstanceFunctionExecution(=a1,=a2,=a3,=a4,=a5)




jedi.evaluate.context.instance.InstanceNameDefinition(=a1,=a2,=a3)




jedi.evaluate.context.instance.InstanceVarArgs(=a1,=a2,=a3)





jedi.evaluate.context.instance.LazyInstanceClassName(=a1,=a2,=a3,=a4)



jedi.evaluate.context.instance.LazyKnownContext(=a7,=a8)



jedi.evaluate.context.instance.LazyKnownContexts(=a5,=a6)






jedi.evaluate.context.instance.SelfAttributeFilter(=a1,=a2,=a3,=a4,=a5)





jedi.evaluate.context.instance.SelfName(=a1,=a2,=a3,=a4)






jedi.evaluate.context.instance.TreeInstance(=a6,=a7,=a8,=a9,=a10)


jedi.evaluate.context.instance.abstractproperty(=a1)



jedi.evaluate.context.instance.apply_py__get__(=a1,=a2)


jedi.evaluate.context.instance.evaluator_method_cache(=a3)



jedi.evaluate.context.instance.get_parent_scope(=a1,=a2)


jedi.evaluate.context.instance.iterator_to_context_set(=a2)


jedi.evaluate.context.instance.memoize_method(=a6)



jedi.evaluate.context.iterable.BuiltinOverwrite(=a3,=a4)





jedi.evaluate.context.iterable.CompForContext(=a5,=a6,=a7,=a8)




jedi.evaluate.context.iterable.CompForContext.from_comp_for(=a4,=a5,=a6)





jedi.evaluate.context.iterable.ComprehensionMixin(=a1,=a2,=a3,=a4)




jedi.evaluate.context.iterable.Context(=a16,=a17,=a18)


jedi.evaluate.context.iterable.ContextSet(=a9)



jedi.evaluate.context.iterable.ContextSet.from_iterable(=a23,=a24)



jedi.evaluate.context.iterable.ContextSet.from_set(=a23,=a24)



jedi.evaluate.context.iterable.ContextSet.from_sets(=a23,=a24)




jedi.evaluate.context.iterable.ContextualizedNode(=a10,=a11,=a12)





jedi.evaluate.context.iterable.DictComprehension(=a1,=a2,=a3,=a4)





jedi.evaluate.context.iterable.DictLiteralContext(=a1,=a2,=a3,=a4)




jedi.evaluate.context.iterable.FakeDict(=a1,=a2,=a3)





jedi.evaluate.context.iterable.FakeSequence(=a1,=a2,=a3,=a4)




jedi.evaluate.context.iterable.Generator(=a1,=a2,=a3)



jedi.evaluate.context.iterable.GeneratorBase(=a1,=a2)





jedi.evaluate.context.iterable.GeneratorComprehension(=a1,=a2,=a3,=a4)


jedi.evaluate.context.iterable.IterableMixin(=a1)



jedi.evaluate.context.iterable.LazyKnownContext(=a9,=a10)



jedi.evaluate.context.iterable.LazyKnownContexts(=a7,=a8)




jedi.evaluate.context.iterable.LazyTreeContext(=a7,=a8,=a9)





jedi.evaluate.context.iterable.ListComprehension(=a1,=a2,=a3,=a4)




jedi.evaluate.context.iterable.MergedArray(=a1,=a2,=a3)







jedi.evaluate.context.iterable.ParserTreeFilter(=a7,=a8,=a9,=a10,=a11,=a12)



jedi.evaluate.context.iterable.Sequence(=a1,=a2)





jedi.evaluate.context.iterable.SequenceLiteralContext(=a1,=a2,=a3,=a4)





jedi.evaluate.context.iterable.SetComprehension(=a1,=a2,=a3,=a4)






jedi.evaluate.context.iterable.Slice(=a1,=a2,=a3,=a4,=a5)




jedi.evaluate.context.iterable.TreeContext(=a7,=a8,=a9)



jedi.evaluate.context.iterable._ArrayInstance(=a1,=a2)





jedi.evaluate.context.iterable._FakeArray(=a1,=a2,=a3,=a4)


jedi.evaluate.context.iterable._check_array_additions(=a14)



jedi.evaluate.context.iterable.check_array_additions(=a1,=a2)




jedi.evaluate.context.iterable.comprehension_from_atom(=a1,=a2,=a3)




jedi.evaluate.context.iterable.evaluate_call_of_leaf(=a10,=a11,=a12)


jedi.evaluate.context.iterable.evaluator_method_cache(=a4)


jedi.evaluate.context.iterable.force_unicode(=a9)


jedi.evaluate.context.iterable.get_comp_fors(=a1)


jedi.evaluate.context.iterable.get_dynamic_array_instance(=a1)


jedi.evaluate.context.iterable.get_int_or_none(=a1)


jedi.evaluate.context.iterable.is_string(=a2)


jedi.evaluate.context.iterable.memoize_method(=a7)



jedi.evaluate.context.iterable.publish_method(=a3,=a4)


jedi.evaluate.context.iterable.safe_property(=a1)


jedi.evaluate.context.iterable.to_list(=a1)




jedi.evaluate.context.iterable.unpack_tuple_to_dict(=a4,=a5,=a6)




jedi.evaluate.context.klass.AnonymousInstanceParamName(=a1,=a2,=a3)


jedi.evaluate.context.klass.CachedMetaClass(=a3)





jedi.evaluate.context.klass.ClassContext(=a17,=a18,=a19,=a20)







jedi.evaluate.context.klass.ClassFilter(=a1,=a2,=a3,=a4,=a5,=a6)





jedi.evaluate.context.klass.ClassName(=a1,=a2,=a3,=a4)




jedi.evaluate.context.klass.ContextName(=a4,=a5,=a6)


jedi.evaluate.context.klass.ContextSet(=a10)



jedi.evaluate.context.klass.ContextSet.from_iterable(=a25,=a26)



jedi.evaluate.context.klass.ContextSet.from_set(=a25,=a26)



jedi.evaluate.context.klass.ContextSet.from_sets(=a25,=a26)



jedi.evaluate.context.klass.LazyKnownContext(=a11,=a12)







jedi.evaluate.context.klass.ParserTreeFilter(=a13,=a14,=a15,=a16,=a17,=a18)




jedi.evaluate.context.klass.TreeContext(=a10,=a11,=a12)




jedi.evaluate.context.klass.TreeNameDefinition(=a7,=a8,=a9)



jedi.evaluate.context.klass.apply_py__get__(=a3,=a4)


jedi.evaluate.context.klass.evaluator_method_cache(=a5)


jedi.evaluate.context.klass.iterator_to_context_set(=a3)


jedi.evaluate.context.klass.use_metaclass(=a3)


jedi.evaluate.context.module.AbstractNameDefinition(=a4)


jedi.evaluate.context.module.ContextNameMixin(=a2)



jedi.evaluate.context.module.DictFilter(=a1,=a2)




jedi.evaluate.context.module.GlobalNameFilter(=a1,=a2,=a3)


jedi.evaluate.context.module.MergedFilter(=a1)






jedi.evaluate.context.module.ModuleContext(=a21,=a22,=a23,=a24,=a25)




jedi.evaluate.context.module.ModuleName(=a1,=a2,=a3)







jedi.evaluate.context.module.ParserTreeFilter(=a19,=a20,=a21,=a22,=a23,=a24)




jedi.evaluate.context.module.SubModuleName(=a1,=a2,=a3)




jedi.evaluate.context.module.TreeContext(=a13,=a14,=a15)




jedi.evaluate.context.module._ModuleAttributeName(=a1,=a2,=a3)


jedi.evaluate.context.module.evaluator_method_cache(=a6)


jedi.evaluate.context.module.infer_import(=a15)



jedi.evaluate.context.module.iter_modules(=a7,=a8)




jedi.evaluate.context.module.python_bytes_to_unicode(=a1,=a2,=a3)


jedi.evaluate.docstrings.ContextSet(=a11)



jedi.evaluate.docstrings.ContextSet.from_iterable(=a27,=a28)



jedi.evaluate.docstrings.ContextSet.from_set(=a27,=a28)



jedi.evaluate.docstrings.ContextSet.from_sets(=a27,=a28)



jedi.evaluate.docstrings.LazyKnownContexts(=a9,=a10)




jedi.evaluate.docstrings.ParserSyntaxError(=a1,=a2,=a3)



jedi.evaluate.docstrings._evaluate_for_statement_string(=a1,=a2)



jedi.evaluate.docstrings._execute_array_values(=a1,=a2)



jedi.evaluate.docstrings._execute_types_in_stmt(=a1,=a2)


jedi.evaluate.docstrings._expand_typestr(=a1)



jedi.evaluate.docstrings._search_param_in_docstr(=a1,=a2)



jedi.evaluate.docstrings._search_param_in_numpydocstr(=a1,=a2)


jedi.evaluate.docstrings._search_return_in_numpydocstr(=a1)


jedi.evaluate.docstrings._strip_rst_role(=a1)


jedi.evaluate.docstrings.dedent(=a3)


jedi.evaluate.docstrings.evaluator_method_cache(=a7)



jedi.evaluate.docstrings.indent_block(=a1,=a2)


jedi.evaluate.docstrings.infer_param(=a16)


jedi.evaluate.docstrings.infer_return_types(=a17)


jedi.evaluate.docstrings.iterator_to_context_set(=a4)


jedi.evaluate.docstrings.parse(=a1)



jedi.evaluate.docstrings.u(=a7,=a8)


jedi.evaluate.eval_expr_stmt(=a18)




jedi.evaluate.eval_trailer(=a1,=a2,=a3)


jedi.evaluate.evaluator_function_cache(=a4)


jedi.evaluate.filters.AbstractFilter(=a2)


jedi.evaluate.filters.AbstractNameDefinition(=a5)


jedi.evaluate.filters.AbstractObjectOverwrite(=a1)




jedi.evaluate.filters.AbstractTreeName(=a1,=a2,=a3)




jedi.evaluate.filters.AbstractUsedNamesFilter(=a1,=a2,=a3)







jedi.evaluate.filters.AnonymousInstanceFunctionExecutionFilter(=a1,=a2,=a3,=a4,=a5,=a6)




jedi.evaluate.filters.AnonymousInstanceParamName(=a4,=a5,=a6)



jedi.evaluate.filters.BuiltinOverwrite(=a5,=a6)




jedi.evaluate.filters.Context(=a19,=a20,=a21)




jedi.evaluate.filters.ContextName(=a7,=a8,=a9)


jedi.evaluate.filters.ContextNameMixin(=a3)


jedi.evaluate.filters.ContextSet(=a12)



jedi.evaluate.filters.ContextSet.from_iterable(=a29,=a30)



jedi.evaluate.filters.ContextSet.from_set(=a29,=a30)



jedi.evaluate.filters.ContextSet.from_sets(=a29,=a30)



jedi.evaluate.filters.DictFilter(=a3,=a4)







jedi.evaluate.filters.FunctionExecutionFilter(=a7,=a8,=a9,=a10,=a11,=a12)




jedi.evaluate.filters.GlobalNameFilter(=a4,=a5,=a6)


jedi.evaluate.filters.MergedFilter(=a2)




jedi.evaluate.filters.ParamName(=a13,=a14,=a15)




jedi.evaluate.filters.Parameter(=a10,=a11,=a12)







jedi.evaluate.filters.ParserTreeFilter(=a25,=a26,=a27,=a28,=a29,=a30)





jedi.evaluate.filters.SpecialMethodFilter(=a1,=a2,=a3,=a4)




jedi.evaluate.filters.TreeNameDefinition(=a10,=a11,=a12)





jedi.evaluate.filters._BuiltinMappedMethod(=a1,=a2,=a3,=a4)





jedi.evaluate.filters._OverwriteMeta(=a1,=a2,=a3,=a4)


jedi.evaluate.filters.abstractmethod(=a1)





jedi.evaluate.filters.get_global_filters(=a5,=a6,=a7,=a8)



jedi.evaluate.filters.get_parent_scope(=a3,=a4)


jedi.evaluate.filters.memoize_method(=a8)



jedi.evaluate.filters.publish_method(=a5,=a6)


jedi.evaluate.filters.search_ancestor(=a3)


jedi.evaluate.filters.to_list(=a2)


jedi.evaluate.filters.use_metaclass(=a4)






jedi.evaluate.finder.AbstractInstanceContext(=a11,=a12,=a13,=a14,=a15)


jedi.evaluate.finder.ContextSet(=a13)



jedi.evaluate.finder.ContextSet.from_iterable(=a31,=a32)



jedi.evaluate.finder.ContextSet.from_set(=a31,=a32)



jedi.evaluate.finder.ContextSet.from_sets(=a31,=a32)








jedi.evaluate.finder.NameFinder(=a1,=a2,=a3,=a4,=a5,=a6,=a7)






jedi.evaluate.finder.TreeArguments(=a6,=a7,=a8,=a9,=a10)




jedi.evaluate.finder.TreeNameDefinition(=a13,=a14,=a15)





jedi.evaluate.finder._check_flow_information(=a1,=a2,=a3,=a4)




jedi.evaluate.finder._check_isinstance_type(=a1,=a2,=a3)





jedi.evaluate.finder.get_global_filters(=a9,=a10,=a11,=a12)



jedi.evaluate.finder.get_parent_scope(=a5,=a6)


jedi.evaluate.finder.is_scope(=a1)


jedi.evaluate.finder.search_ancestor(=a4)




jedi.evaluate.flow_analysis.Status(=a1,=a2,=a3)





jedi.evaluate.flow_analysis._break_check(=a1,=a2,=a3,=a4)



jedi.evaluate.flow_analysis._check_if(=a1,=a2)


jedi.evaluate.flow_analysis._get_flow_scopes(=a1)



jedi.evaluate.flow_analysis.get_flow_branch_keyword(=a1,=a2)



jedi.evaluate.flow_analysis.get_parent_scope(=a7,=a8)


jedi.evaluate.flow_analysis.is_scope(=a2)





jedi.evaluate.flow_analysis.reachability_check(=a1,=a2,=a3,=a4)






jedi.evaluate.helpers.CompiledObject(=a16,=a17,=a18,=a19,=a20)



jedi.evaluate.helpers._get_safe_value_or_none(=a1,=a2)


jedi.evaluate.helpers.call_of_leaf(=a1)


jedi.evaluate.helpers.chain(=a2)


jedi.evaluate.helpers.contextmanager(=a1)


jedi.evaluate.helpers.deep_ast_copy(=a1)




jedi.evaluate.helpers.evaluate_call_of_leaf(=a13,=a14,=a15)


jedi.evaluate.helpers.get_int_or_none(=a2)



jedi.evaluate.helpers.get_module_names(=a3,=a4)


jedi.evaluate.helpers.get_names_of_node(=a1)



jedi.evaluate.helpers.get_parent_scope(=a9,=a10)


jedi.evaluate.helpers.is_compiled(=a1)


jedi.evaluate.helpers.is_literal(=a1)


jedi.evaluate.helpers.is_number(=a1)


jedi.evaluate.helpers.is_stdlib_path(=a1)


jedi.evaluate.helpers.is_string(=a3)


jedi.evaluate.helpers.unicode(=a6)


jedi.evaluate.imports.AbstractNameDefinition(=a6)


jedi.evaluate.imports.ContextSet(=a14)



jedi.evaluate.imports.ContextSet.from_iterable(=a33,=a34)



jedi.evaluate.imports.ContextSet.from_set(=a33,=a34)



jedi.evaluate.imports.ContextSet.from_sets(=a33,=a34)




jedi.evaluate.imports.ImplicitNSInfo(=a4,=a5,=a6)




jedi.evaluate.imports.ImportName(=a4,=a5,=a6)






jedi.evaluate.imports.Importer(=a1,=a2,=a3,=a4,=a5)


jedi.evaluate.imports.ModuleCache(=a1)




jedi.evaluate.imports.NestedImportModule(=a1,=a2,=a3)




jedi.evaluate.imports.SubModuleName(=a4,=a5,=a6)




jedi.evaluate.imports._add_error(=a1,=a2,=a3)







jedi.evaluate.imports._load_module(=a1,=a2,=a3,=a4,=a5,=a6)





jedi.evaluate.imports.add_module_to_cache(=a1,=a2,=a3,=a4)



jedi.evaluate.imports.dotted_from_fs_path(=a3,=a4)


jedi.evaluate.imports.evaluator_method_cache(=a8)


jedi.evaluate.imports.force_unicode(=a10)



jedi.evaluate.imports.get_cached_code_lines(=a3,=a4)




jedi.evaluate.imports.get_modules_containing_name(=a1,=a2,=a3)


jedi.evaluate.imports.infer_import(=a19)




jedi.evaluate.imports.python_bytes_to_unicode(=a4,=a5,=a6)


jedi.evaluate.imports.search_ancestor(=a5)


jedi.evaluate.imports.unicode(=a7)


jedi.evaluate.imports.unite(=a2)




jedi.evaluate.iterate_contexts(=a4,=a5,=a6)



jedi.evaluate.lazy_context.AbstractLazyContext(=a1,=a2)


jedi.evaluate.lazy_context.ContextSet(=a15)



jedi.evaluate.lazy_context.ContextSet.from_iterable(=a35,=a36)



jedi.evaluate.lazy_context.ContextSet.from_set(=a35,=a36)



jedi.evaluate.lazy_context.ContextSet.from_sets(=a35,=a36)



jedi.evaluate.lazy_context.LazyKnownContext(=a13,=a14)



jedi.evaluate.lazy_context.LazyKnownContexts(=a11,=a12)




jedi.evaluate.lazy_context.LazyTreeContext(=a10,=a11,=a12)


jedi.evaluate.lazy_context.LazyUnknownContext(=a1)



jedi.evaluate.lazy_context.MergedLazyContexts(=a1,=a2)


jedi.evaluate.lazy_context.get_merged_lazy_context(=a2)





jedi.evaluate.param.ExecutedParam(=a5,=a6,=a7,=a8)



jedi.evaluate.param.LazyKnownContext(=a15,=a16)




jedi.evaluate.param.LazyTreeContext(=a13,=a14,=a15)


jedi.evaluate.param.LazyUnknownContext(=a2)



jedi.evaluate.param.PushBackIterator(=a1,=a2)





jedi.evaluate.param._add_argument_issue(=a1,=a2,=a3,=a4)



jedi.evaluate.param._create_default_param(=a1,=a2)



jedi.evaluate.param._error_argument_count(=a1,=a2)



jedi.evaluate.param.create_default_params(=a1,=a2)


jedi.evaluate.param.defaultdict(=a1)



jedi.evaluate.param.get_params(=a3,=a4)


jedi.evaluate.parser_cache.evaluator_function_cache(=a5)


jedi.evaluate.parser_cache.get_yield_exprs(=a20)


jedi.evaluate.pep0484.ContextSet(=a16)



jedi.evaluate.pep0484.ContextSet.from_iterable(=a37,=a38)



jedi.evaluate.pep0484.ContextSet.from_set(=a37,=a38)



jedi.evaluate.pep0484.ContextSet.from_sets(=a37,=a38)




jedi.evaluate.pep0484.LazyTreeContext(=a16,=a17,=a18)






jedi.evaluate.pep0484.ModuleContext(=a26,=a27,=a28,=a29,=a30)




jedi.evaluate.pep0484.ParserSyntaxError(=a4,=a5,=a6)




jedi.evaluate.pep0484._evaluate_annotation_string(=a1,=a2,=a3)




jedi.evaluate.pep0484._evaluate_for_annotation(=a1,=a2,=a3)





jedi.evaluate.pep0484._find_type_from_comment_hint(=a1,=a2,=a3,=a4)



jedi.evaluate.pep0484._fix_forward_reference(=a1,=a2)



jedi.evaluate.pep0484._get_forward_reference_node(=a1,=a2)


jedi.evaluate.pep0484._get_typing_replacement_module(=a1)


jedi.evaluate.pep0484._split_comment_param_declaration(=a1)


jedi.evaluate.pep0484.evaluator_method_cache(=a9)




jedi.evaluate.pep0484.find_type_from_comment_hint_assign(=a1,=a2,=a3)




jedi.evaluate.pep0484.find_type_from_comment_hint_for(=a1,=a2,=a3)




jedi.evaluate.pep0484.find_type_from_comment_hint_with(=a1,=a2,=a3)


jedi.evaluate.pep0484.force_unicode(=a11)


jedi.evaluate.pep0484.infer_param(=a21)


jedi.evaluate.pep0484.infer_return_types(=a22)


jedi.evaluate.pep0484.is_string(=a4)


jedi.evaluate.pep0484.parse(=a2)


jedi.evaluate.pep0484.py__annotations__(=a1)




jedi.evaluate.pep0484.py__getitem__(=a1,=a2,=a3)



jedi.evaluate.pep0484.split_lines(=a1,=a2)


jedi.evaluate.pep0484.unicode(=a8)




jedi.evaluate.python_bytes_to_unicode(=a7,=a8,=a9)



jedi.evaluate.recursion.ExecutionRecursionDetector(=a1,=a2)


jedi.evaluate.recursion.RecursionDetector(=a1)


jedi.evaluate.recursion.contextmanager(=a2)


jedi.evaluate.recursion.execution_recursion_decorator(=a1)





jedi.evaluate.syntax_tree.ClassContext(=a21,=a22,=a23,=a24)


jedi.evaluate.syntax_tree.CompiledInstance(=a3)


jedi.evaluate.syntax_tree.ContextSet(=a17)



jedi.evaluate.syntax_tree.ContextSet.from_iterable(=a39,=a40)



jedi.evaluate.syntax_tree.ContextSet.from_set(=a39,=a40)



jedi.evaluate.syntax_tree.ContextSet.from_sets(=a39,=a40)




jedi.evaluate.syntax_tree.ContextualizedName(=a7,=a8,=a9)




jedi.evaluate.syntax_tree.ContextualizedNode(=a13,=a14,=a15)





jedi.evaluate.syntax_tree.FunctionContext(=a21,=a22,=a23,=a24)








jedi.evaluate.syntax_tree.NameFinder(=a8,=a9,=a10,=a11,=a12,=a13,=a14)






jedi.evaluate.syntax_tree.TreeInstance(=a11,=a12,=a13,=a14,=a15)



jedi.evaluate.syntax_tree._apply_decorators(=a1,=a2)



jedi.evaluate.syntax_tree._bool_to_context(=a1,=a2)






jedi.evaluate.syntax_tree._eval_comparison(=a1,=a2,=a3,=a4,=a5)






jedi.evaluate.syntax_tree._eval_comparison_part(=a1,=a2,=a3,=a4,=a5)




jedi.evaluate.syntax_tree._evaluate_for_annotation(=a4,=a5,=a6)


jedi.evaluate.syntax_tree._is_list(=a1)


jedi.evaluate.syntax_tree._is_tuple(=a1)


jedi.evaluate.syntax_tree._limit_context_infers(=a1)



jedi.evaluate.syntax_tree._literals_to_types(=a1,=a2)


jedi.evaluate.syntax_tree._py__stop_iteration_returns(=a1)





jedi.evaluate.syntax_tree._remove_statements(=a1,=a2,=a3,=a4)




jedi.evaluate.syntax_tree.check_tuple_assignments(=a4,=a5,=a6)



jedi.evaluate.syntax_tree.eval_atom(=a3,=a4)


jedi.evaluate.syntax_tree.eval_expr_stmt(=a23)



jedi.evaluate.syntax_tree.eval_or_test(=a1,=a2)




jedi.evaluate.syntax_tree.eval_subscript_list(=a1,=a2,=a3)




jedi.evaluate.syntax_tree.eval_trailer(=a4,=a5,=a6)


jedi.evaluate.syntax_tree.force_unicode(=a12)


jedi.evaluate.syntax_tree.is_compiled(=a2)


jedi.evaluate.syntax_tree.is_literal(=a2)


jedi.evaluate.syntax_tree.is_number(=a2)


jedi.evaluate.syntax_tree.is_string(=a5)




jedi.evaluate.syntax_tree.iterate_contexts(=a7,=a8,=a9)


jedi.evaluate.syntax_tree.iterator_to_context_set(=a5)




jedi.evaluate.syntax_tree.tree_name_to_contexts(=a4,=a5,=a6)


jedi.evaluate.syntax_tree.unicode(=a9)




jedi.evaluate.sys_path.ContextualizedNode(=a16,=a17,=a18)



jedi.evaluate.sys_path._abs_path(=a1,=a2)


jedi.evaluate.sys_path._get_buildout_script_paths(=a1)



jedi.evaluate.sys_path._get_parent_dir_with_file(=a1,=a2)



jedi.evaluate.sys_path._get_paths_from_buildout_script(=a1,=a2)



jedi.evaluate.sys_path._paths_from_assignment(=a1,=a2)




jedi.evaluate.sys_path._paths_from_list_modifications(=a1,=a2,=a3)


jedi.evaluate.sys_path.check_sys_path_modifications(=a24)



jedi.evaluate.sys_path.discover_buildout_paths(=a3,=a4)



jedi.evaluate.sys_path.dotted_path_in_sys_path(=a3,=a4)


jedi.evaluate.sys_path.evaluator_method_cache(=a10)


jedi.evaluate.sys_path.force_unicode(=a13)



jedi.evaluate.sys_path.get_cached_code_lines(=a5,=a6)


jedi.evaluate.sys_path.is_string(=a6)



jedi.evaluate.sys_path.traverse_parents(=a5,=a6)


jedi.evaluate.sys_path.unicode(=a10)


jedi.evaluate.unite(=a3)






jedi.evaluate.usages.ModuleContext(=a31,=a32,=a33,=a34,=a35)




jedi.evaluate.usages.TreeNameDefinition(=a16,=a17,=a18)


jedi.evaluate.usages._dictionarize(=a1)



jedi.evaluate.usages._find_names(=a1,=a2)



jedi.evaluate.usages._resolve_names(=a1,=a2)



jedi.evaluate.usages.usages(=a1,=a2)



jedi.evaluate.utils.PushBackIterator(=a3,=a4)


jedi.evaluate.utils.UncaughtAttributeError(=a1)



jedi.evaluate.utils.dotted_from_fs_path(=a5,=a6)



jedi.evaluate.utils.indent_block(=a3,=a4)



jedi.evaluate.utils.reraise(=a3,=a4)


jedi.evaluate.utils.reraise_uncaught(=a1)


jedi.evaluate.utils.safe_property(=a2)


jedi.evaluate.utils.to_list(=a3)


jedi.evaluate.utils.unite(=a4)


jedi.parser_utils.clean_scope_docstring(=a2)


jedi.parser_utils.cleandoc(=a1)


jedi.parser_utils.for_stmt_defines_one_name(=a1)


jedi.parser_utils.force_unicode(=a14)



jedi.parser_utils.get_cached_code_lines(=a7,=a8)




jedi.parser_utils.get_call_signature(=a1,=a2,=a3)


jedi.parser_utils.get_comp_fors(=a2)


jedi.parser_utils.get_doc_with_call_signature(=a2)



jedi.parser_utils.get_executable_nodes(=a3,=a4)



jedi.parser_utils.get_flow_branch_keyword(=a3,=a4)


jedi.parser_utils.get_following_comment_same_line(=a1)



jedi.parser_utils.get_parent_scope(=a11,=a12)



jedi.parser_utils.get_statement_of_position(=a3,=a4)


jedi.parser_utils.is_scope(=a3)


jedi.parser_utils.literal_eval(=a2)



jedi.parser_utils.move(=a1,=a2)


jedi.parser_utils.safe_literal_eval(=a3)

