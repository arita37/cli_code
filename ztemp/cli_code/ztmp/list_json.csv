module_name,module_version,full_name,prefix,obj_name,obj_doc,object_type,arg_full,0,1,2,3
json,2.0.9,json.decoder.JSONArray,decoder,JSONArray,"Python Library Documentation: function JSONArray in module json.decoder

JSONArray(s_and_end, scan_once, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \t\n\r')
",function,"(""(s_and_end, scan_once, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \\t\\n\\r')"",)",s_and_end,,,arg_info
json,2.0.9,json.decoder.JSONArray,decoder,JSONArray,"Python Library Documentation: function JSONArray in module json.decoder

JSONArray(s_and_end, scan_once, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \t\n\r')
",function,"(""(s_and_end, scan_once, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \\t\\n\\r')"",)",scan_once,,,arg_info
json,2.0.9,json.decoder.JSONArray,decoder,JSONArray,"Python Library Documentation: function JSONArray in module json.decoder

JSONArray(s_and_end, scan_once, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \t\n\r')
",function,"(""(s_and_end, scan_once, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \\t\\n\\r')"",)",_w,<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>,builtin_function_or_method,arg_info
json,2.0.9,json.decoder.JSONArray,decoder,JSONArray,"Python Library Documentation: function JSONArray in module json.decoder

JSONArray(s_and_end, scan_once, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \t\n\r')
",function,"(""(s_and_end, scan_once, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \\t\\n\\r')"",)",_ws," 	
",,arg_info
json,2.0.9,json.decoder.JSONDecodeError,decoder,JSONDecodeError,"Python Library Documentation: class JSONDecodeError in module json.decoder

class JSONDecodeError(builtins.ValueError)
 |  Subclass of ValueError with the following additional properties:
 |  
 |  msg: The unformatted error message
 |  doc: The JSON document being parsed
 |  pos: The start index of doc where parsing failed
 |  lineno: The line corresponding to pos
 |  colno: The column corresponding to pos
 |  
 |  Method resolution order:
 |      JSONDecodeError
 |      builtins.ValueError
 |      builtins.Exception
 |      builtins.BaseException
 |      builtins.object
 |  
 |  Methods defined here:
 |  
 |  __init__(self, msg, doc, pos)
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  __reduce__(self)
 |      helper for pickle
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from builtins.ValueError:
 |  
 |  __new__(*args, **kwargs) from builtins.type
 |      Create and return a new object.  See help(type) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from builtins.BaseException:
 |  
 |  __delattr__(self, name, /)
 |      Implement delattr(self, name).
 |  
 |  __getattribute__(self, name, /)
 |      Return getattr(self, name).
 |  
 |  __repr__(self, /)
 |      Return repr(self).
 |  
 |  __setattr__(self, name, value, /)
 |      Implement setattr(self, name, value).
 |  
 |  __setstate__(...)
 |  
 |  __str__(self, /)
 |      Return str(self).
 |  
 |  with_traceback(...)
 |      Exception.with_traceback(tb) --
 |      set self.__traceback__ to tb and return self.
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from builtins.BaseException:
 |  
 |  __cause__
 |      exception cause
 |  
 |  __context__
 |      exception context
 |  
 |  __dict__
 |  
 |  __suppress_context__
 |  
 |  __traceback__
 |  
 |  args
",class,"('(self, msg, doc, pos)',)",doc,,,arg_info
json,2.0.9,json.decoder.JSONDecodeError,decoder,JSONDecodeError,"Python Library Documentation: class JSONDecodeError in module json.decoder

class JSONDecodeError(builtins.ValueError)
 |  Subclass of ValueError with the following additional properties:
 |  
 |  msg: The unformatted error message
 |  doc: The JSON document being parsed
 |  pos: The start index of doc where parsing failed
 |  lineno: The line corresponding to pos
 |  colno: The column corresponding to pos
 |  
 |  Method resolution order:
 |      JSONDecodeError
 |      builtins.ValueError
 |      builtins.Exception
 |      builtins.BaseException
 |      builtins.object
 |  
 |  Methods defined here:
 |  
 |  __init__(self, msg, doc, pos)
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  __reduce__(self)
 |      helper for pickle
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from builtins.ValueError:
 |  
 |  __new__(*args, **kwargs) from builtins.type
 |      Create and return a new object.  See help(type) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from builtins.BaseException:
 |  
 |  __delattr__(self, name, /)
 |      Implement delattr(self, name).
 |  
 |  __getattribute__(self, name, /)
 |      Return getattr(self, name).
 |  
 |  __repr__(self, /)
 |      Return repr(self).
 |  
 |  __setattr__(self, name, value, /)
 |      Implement setattr(self, name, value).
 |  
 |  __setstate__(...)
 |  
 |  __str__(self, /)
 |      Return str(self).
 |  
 |  with_traceback(...)
 |      Exception.with_traceback(tb) --
 |      set self.__traceback__ to tb and return self.
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from builtins.BaseException:
 |  
 |  __cause__
 |      exception cause
 |  
 |  __context__
 |      exception context
 |  
 |  __dict__
 |  
 |  __suppress_context__
 |  
 |  __traceback__
 |  
 |  args
",class,"('(self, msg, doc, pos)',)",msg,,,arg_info
json,2.0.9,json.decoder.JSONDecodeError,decoder,JSONDecodeError,"Python Library Documentation: class JSONDecodeError in module json.decoder

class JSONDecodeError(builtins.ValueError)
 |  Subclass of ValueError with the following additional properties:
 |  
 |  msg: The unformatted error message
 |  doc: The JSON document being parsed
 |  pos: The start index of doc where parsing failed
 |  lineno: The line corresponding to pos
 |  colno: The column corresponding to pos
 |  
 |  Method resolution order:
 |      JSONDecodeError
 |      builtins.ValueError
 |      builtins.Exception
 |      builtins.BaseException
 |      builtins.object
 |  
 |  Methods defined here:
 |  
 |  __init__(self, msg, doc, pos)
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  __reduce__(self)
 |      helper for pickle
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from builtins.ValueError:
 |  
 |  __new__(*args, **kwargs) from builtins.type
 |      Create and return a new object.  See help(type) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from builtins.BaseException:
 |  
 |  __delattr__(self, name, /)
 |      Implement delattr(self, name).
 |  
 |  __getattribute__(self, name, /)
 |      Return getattr(self, name).
 |  
 |  __repr__(self, /)
 |      Return repr(self).
 |  
 |  __setattr__(self, name, value, /)
 |      Implement setattr(self, name, value).
 |  
 |  __setstate__(...)
 |  
 |  __str__(self, /)
 |      Return str(self).
 |  
 |  with_traceback(...)
 |      Exception.with_traceback(tb) --
 |      set self.__traceback__ to tb and return self.
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from builtins.BaseException:
 |  
 |  __cause__
 |      exception cause
 |  
 |  __context__
 |      exception context
 |  
 |  __dict__
 |  
 |  __suppress_context__
 |  
 |  __traceback__
 |  
 |  args
",class,"('(self, msg, doc, pos)',)",self,,,arg_info
json,2.0.9,json.decoder.JSONDecodeError,decoder,JSONDecodeError,"Python Library Documentation: class JSONDecodeError in module json.decoder

class JSONDecodeError(builtins.ValueError)
 |  Subclass of ValueError with the following additional properties:
 |  
 |  msg: The unformatted error message
 |  doc: The JSON document being parsed
 |  pos: The start index of doc where parsing failed
 |  lineno: The line corresponding to pos
 |  colno: The column corresponding to pos
 |  
 |  Method resolution order:
 |      JSONDecodeError
 |      builtins.ValueError
 |      builtins.Exception
 |      builtins.BaseException
 |      builtins.object
 |  
 |  Methods defined here:
 |  
 |  __init__(self, msg, doc, pos)
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  __reduce__(self)
 |      helper for pickle
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from builtins.ValueError:
 |  
 |  __new__(*args, **kwargs) from builtins.type
 |      Create and return a new object.  See help(type) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from builtins.BaseException:
 |  
 |  __delattr__(self, name, /)
 |      Implement delattr(self, name).
 |  
 |  __getattribute__(self, name, /)
 |      Return getattr(self, name).
 |  
 |  __repr__(self, /)
 |      Return repr(self).
 |  
 |  __setattr__(self, name, value, /)
 |      Implement setattr(self, name, value).
 |  
 |  __setstate__(...)
 |  
 |  __str__(self, /)
 |      Return str(self).
 |  
 |  with_traceback(...)
 |      Exception.with_traceback(tb) --
 |      set self.__traceback__ to tb and return self.
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from builtins.BaseException:
 |  
 |  __cause__
 |      exception cause
 |  
 |  __context__
 |      exception context
 |  
 |  __dict__
 |  
 |  __suppress_context__
 |  
 |  __traceback__
 |  
 |  args
",class,"('(self, msg, doc, pos)',)",pos,,,arg_info
json,2.0.9,json.decoder.JSONDecoder,decoder,JSONDecoder,"Python Library Documentation: class JSONDecoder in module json.decoder

class JSONDecoder(builtins.object)
 |  Simple JSON <http://json.org> decoder
 |  
 |  Performs the following translations in decoding by default:
 |  
 |  +---------------+-------------------+
 |  | JSON          | Python            |
 |  +===============+===================+
 |  | object        | dict              |
 |  +---------------+-------------------+
 |  | array         | list              |
 |  +---------------+-------------------+
 |  | string        | str               |
 |  +---------------+-------------------+
 |  | number (int)  | int               |
 |  +---------------+-------------------+
 |  | number (real) | float             |
 |  +---------------+-------------------+
 |  | true          | True              |
 |  +---------------+-------------------+
 |  | false         | False             |
 |  +---------------+-------------------+
 |  | null          | None              |
 |  +---------------+-------------------+
 |  
 |  It also understands ``NaN``, ``Infinity``, and ``-Infinity`` as
 |  their corresponding ``float`` values, which is outside the JSON spec.
 |  
 |  Methods defined here:
 |  
 |  __init__(self, *, object_hook=None, parse_float=None, parse_int=None, parse_constant=None, strict=True, object_pairs_hook=None)
 |      ``object_hook``, if specified, will be called with the result
 |      of every JSON object decoded and its return value will be used in
 |      place of the given ``dict``.  This can be used to provide custom
 |      deserializations (e.g. to support JSON-RPC class hinting).
 |      
 |      ``object_pairs_hook``, if specified will be called with the result of
 |      every JSON object decoded with an ordered list of pairs.  The return
 |      value of ``object_pairs_hook`` will be used instead of the ``dict``.
 |      This feature can be used to implement custom decoders that rely on the
 |      order that the key and value pairs are decoded (for example,
 |      collections.OrderedDict will remember the order of insertion). If
 |      ``object_hook`` is also defined, the ``object_pairs_hook`` takes
 |      priority.
 |      
 |      ``parse_float``, if specified, will be called with the string
 |      of every JSON float to be decoded. By default this is equivalent to
 |      float(num_str). This can be used to use another datatype or parser
 |      for JSON floats (e.g. decimal.Decimal).
 |      
 |      ``parse_int``, if specified, will be called with the string
 |      of every JSON int to be decoded. By default this is equivalent to
 |      int(num_str). This can be used to use another datatype or parser
 |      for JSON integers (e.g. float).
 |      
 |      ``parse_constant``, if specified, will be called with one of the
 |      following strings: -Infinity, Infinity, NaN.
 |      This can be used to raise an exception if invalid JSON numbers
 |      are encountered.
 |      
 |      If ``strict`` is false (true is the default), then control
 |      characters will be allowed inside strings.  Control characters in
 |      this context are those with character codes in the 0-31 range,
 |      including ``'\t'`` (tab), ``'\n'``, ``'\r'`` and ``'\0'``.
 |  
 |  decode(self, s, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>)
 |      Return the Python representation of ``s`` (a ``str`` instance
 |      containing a JSON document).
 |  
 |  raw_decode(self, s, idx=0)
 |      Decode a JSON document from ``s`` (a ``str`` beginning with
 |      a JSON document) and return a 2-tuple of the Python
 |      representation and the index in ``s`` where the document ended.
 |      
 |      This can be used to decode a JSON document from a string that may
 |      have extraneous data at the end.
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)
",class,"('(self, *, object_hook=None, parse_float=None, parse_int=None, parse_constant=None, strict=True, object_pairs_hook=None)',)",self,,,arg_info
json,2.0.9,json.decoder.JSONObject,decoder,JSONObject,"Python Library Documentation: function JSONObject in module json.decoder

JSONObject(s_and_end, strict, scan_once, object_hook, object_pairs_hook, memo=None, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \t\n\r')
",function,"(""(s_and_end, strict, scan_once, object_hook, object_pairs_hook, memo=None, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \\t\\n\\r')"",)",object_hook,,,arg_info
json,2.0.9,json.decoder.JSONObject,decoder,JSONObject,"Python Library Documentation: function JSONObject in module json.decoder

JSONObject(s_and_end, strict, scan_once, object_hook, object_pairs_hook, memo=None, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \t\n\r')
",function,"(""(s_and_end, strict, scan_once, object_hook, object_pairs_hook, memo=None, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \\t\\n\\r')"",)",_w,<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>,builtin_function_or_method,arg_info
json,2.0.9,json.decoder.JSONObject,decoder,JSONObject,"Python Library Documentation: function JSONObject in module json.decoder

JSONObject(s_and_end, strict, scan_once, object_hook, object_pairs_hook, memo=None, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \t\n\r')
",function,"(""(s_and_end, strict, scan_once, object_hook, object_pairs_hook, memo=None, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \\t\\n\\r')"",)",_ws," 	
",,arg_info
json,2.0.9,json.decoder.JSONObject,decoder,JSONObject,"Python Library Documentation: function JSONObject in module json.decoder

JSONObject(s_and_end, strict, scan_once, object_hook, object_pairs_hook, memo=None, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \t\n\r')
",function,"(""(s_and_end, strict, scan_once, object_hook, object_pairs_hook, memo=None, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \\t\\n\\r')"",)",scan_once,,,arg_info
json,2.0.9,json.decoder.JSONObject,decoder,JSONObject,"Python Library Documentation: function JSONObject in module json.decoder

JSONObject(s_and_end, strict, scan_once, object_hook, object_pairs_hook, memo=None, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \t\n\r')
",function,"(""(s_and_end, strict, scan_once, object_hook, object_pairs_hook, memo=None, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \\t\\n\\r')"",)",strict,,,arg_info
json,2.0.9,json.decoder.JSONObject,decoder,JSONObject,"Python Library Documentation: function JSONObject in module json.decoder

JSONObject(s_and_end, strict, scan_once, object_hook, object_pairs_hook, memo=None, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \t\n\r')
",function,"(""(s_and_end, strict, scan_once, object_hook, object_pairs_hook, memo=None, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \\t\\n\\r')"",)",s_and_end,,,arg_info
json,2.0.9,json.decoder.JSONObject,decoder,JSONObject,"Python Library Documentation: function JSONObject in module json.decoder

JSONObject(s_and_end, strict, scan_once, object_hook, object_pairs_hook, memo=None, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \t\n\r')
",function,"(""(s_and_end, strict, scan_once, object_hook, object_pairs_hook, memo=None, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \\t\\n\\r')"",)",object_pairs_hook,,,arg_info
json,2.0.9,json.decoder.JSONObject,decoder,JSONObject,"Python Library Documentation: function JSONObject in module json.decoder

JSONObject(s_and_end, strict, scan_once, object_hook, object_pairs_hook, memo=None, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \t\n\r')
",function,"(""(s_and_end, strict, scan_once, object_hook, object_pairs_hook, memo=None, _w=<built-in method match of _sre.SRE_Pattern object at 0x000002299344C1B0>, _ws=' \\t\\n\\r')"",)",memo,,NoneType,arg_info
json,2.0.9,json.decoder._decode_uXXXX,decoder,_decode_uXXXX,"Python Library Documentation: function _decode_uXXXX in module json.decoder

_decode_uXXXX(s, pos)
",function,"('(s, pos)',)",s,,,arg_info
json,2.0.9,json.decoder._decode_uXXXX,decoder,_decode_uXXXX,"Python Library Documentation: function _decode_uXXXX in module json.decoder

_decode_uXXXX(s, pos)
",function,"('(s, pos)',)",pos,,,arg_info
json,2.0.9,json.decoder.py_scanstring,decoder,py_scanstring,"Python Library Documentation: function py_scanstring in module json.decoder

py_scanstring(s, end, strict=True, _b={'""': '""', '\\': '\\', '/': '/', 'b': '\x08', 'f': '\x0c', 'n': '\n', 'r': '\r', 't': '\t'}, _m=<built-in method match of _sre.SRE_Pattern object at 0x0000022993408810>)
    Scan the string s for a JSON string. End is the index of the
    character in s after the quote that started the JSON string.
    Unescapes all valid JSON string escape sequences and raises ValueError
    on attempt to decode an invalid string. If strict is False then literal
    control characters are allowed in the string.
    
    Returns a tuple of the decoded string and the index of the character in s
    after the end quote.
",function,"('(s, end, strict=True, _b={\'""\': \'""\', \'\\\\\': \'\\\\\', \'/\': \'/\', \'b\': \'\\x08\', \'f\': \'\\x0c\', \'n\': \'\\n\', \'r\': \'\\r\', \'t\': \'\\t\'}, _m=<built-in method match of _sre.SRE_Pattern object at 0x0000022993408810>)',)",end,,,arg_info
json,2.0.9,json.decoder.py_scanstring,decoder,py_scanstring,"Python Library Documentation: function py_scanstring in module json.decoder

py_scanstring(s, end, strict=True, _b={'""': '""', '\\': '\\', '/': '/', 'b': '\x08', 'f': '\x0c', 'n': '\n', 'r': '\r', 't': '\t'}, _m=<built-in method match of _sre.SRE_Pattern object at 0x0000022993408810>)
    Scan the string s for a JSON string. End is the index of the
    character in s after the quote that started the JSON string.
    Unescapes all valid JSON string escape sequences and raises ValueError
    on attempt to decode an invalid string. If strict is False then literal
    control characters are allowed in the string.
    
    Returns a tuple of the decoded string and the index of the character in s
    after the end quote.
",function,"('(s, end, strict=True, _b={\'""\': \'""\', \'\\\\\': \'\\\\\', \'/\': \'/\', \'b\': \'\\x08\', \'f\': \'\\x0c\', \'n\': \'\\n\', \'r\': \'\\r\', \'t\': \'\\t\'}, _m=<built-in method match of _sre.SRE_Pattern object at 0x0000022993408810>)',)",_m,<built-in method match of _sre.SRE_Pattern object at 0x0000022993408810>,builtin_function_or_method,arg_info
json,2.0.9,json.decoder.py_scanstring,decoder,py_scanstring,"Python Library Documentation: function py_scanstring in module json.decoder

py_scanstring(s, end, strict=True, _b={'""': '""', '\\': '\\', '/': '/', 'b': '\x08', 'f': '\x0c', 'n': '\n', 'r': '\r', 't': '\t'}, _m=<built-in method match of _sre.SRE_Pattern object at 0x0000022993408810>)
    Scan the string s for a JSON string. End is the index of the
    character in s after the quote that started the JSON string.
    Unescapes all valid JSON string escape sequences and raises ValueError
    on attempt to decode an invalid string. If strict is False then literal
    control characters are allowed in the string.
    
    Returns a tuple of the decoded string and the index of the character in s
    after the end quote.
",function,"('(s, end, strict=True, _b={\'""\': \'""\', \'\\\\\': \'\\\\\', \'/\': \'/\', \'b\': \'\\x08\', \'f\': \'\\x0c\', \'n\': \'\\n\', \'r\': \'\\r\', \'t\': \'\\t\'}, _m=<built-in method match of _sre.SRE_Pattern object at 0x0000022993408810>)',)",_b,"{'""': '""', '\\': '\\', '/': '/', 'b': '\x08', 'f': '\x0c', 'n': '\n', 'r': '\r', 't': '\t'}",dict,arg_info
json,2.0.9,json.decoder.py_scanstring,decoder,py_scanstring,"Python Library Documentation: function py_scanstring in module json.decoder

py_scanstring(s, end, strict=True, _b={'""': '""', '\\': '\\', '/': '/', 'b': '\x08', 'f': '\x0c', 'n': '\n', 'r': '\r', 't': '\t'}, _m=<built-in method match of _sre.SRE_Pattern object at 0x0000022993408810>)
    Scan the string s for a JSON string. End is the index of the
    character in s after the quote that started the JSON string.
    Unescapes all valid JSON string escape sequences and raises ValueError
    on attempt to decode an invalid string. If strict is False then literal
    control characters are allowed in the string.
    
    Returns a tuple of the decoded string and the index of the character in s
    after the end quote.
",function,"('(s, end, strict=True, _b={\'""\': \'""\', \'\\\\\': \'\\\\\', \'/\': \'/\', \'b\': \'\\x08\', \'f\': \'\\x0c\', \'n\': \'\\n\', \'r\': \'\\r\', \'t\': \'\\t\'}, _m=<built-in method match of _sre.SRE_Pattern object at 0x0000022993408810>)',)",strict,True,bool,arg_info
json,2.0.9,json.decoder.py_scanstring,decoder,py_scanstring,"Python Library Documentation: function py_scanstring in module json.decoder

py_scanstring(s, end, strict=True, _b={'""': '""', '\\': '\\', '/': '/', 'b': '\x08', 'f': '\x0c', 'n': '\n', 'r': '\r', 't': '\t'}, _m=<built-in method match of _sre.SRE_Pattern object at 0x0000022993408810>)
    Scan the string s for a JSON string. End is the index of the
    character in s after the quote that started the JSON string.
    Unescapes all valid JSON string escape sequences and raises ValueError
    on attempt to decode an invalid string. If strict is False then literal
    control characters are allowed in the string.
    
    Returns a tuple of the decoded string and the index of the character in s
    after the end quote.
",function,"('(s, end, strict=True, _b={\'""\': \'""\', \'\\\\\': \'\\\\\', \'/\': \'/\', \'b\': \'\\x08\', \'f\': \'\\x0c\', \'n\': \'\\n\', \'r\': \'\\r\', \'t\': \'\\t\'}, _m=<built-in method match of _sre.SRE_Pattern object at 0x0000022993408810>)',)",s,,,arg_info
json,2.0.9,json.encoder.JSONEncoder,encoder,JSONEncoder,"Python Library Documentation: class JSONEncoder in module json.encoder

class JSONEncoder(builtins.object)
 |  Extensible JSON <http://json.org> encoder for Python data structures.
 |  
 |  Supports the following objects and types by default:
 |  
 |  +-------------------+---------------+
 |  | Python            | JSON          |
 |  +===================+===============+
 |  | dict              | object        |
 |  +-------------------+---------------+
 |  | list, tuple       | array         |
 |  +-------------------+---------------+
 |  | str               | string        |
 |  +-------------------+---------------+
 |  | int, float        | number        |
 |  +-------------------+---------------+
 |  | True              | true          |
 |  +-------------------+---------------+
 |  | False             | false         |
 |  +-------------------+---------------+
 |  | None              | null          |
 |  +-------------------+---------------+
 |  
 |  To extend this to recognize other objects, subclass and implement a
 |  ``.default()`` method with another method that returns a serializable
 |  object for ``o`` if possible, otherwise it should call the superclass
 |  implementation (to raise ``TypeError``).
 |  
 |  Methods defined here:
 |  
 |  __init__(self, *, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, sort_keys=False, indent=None, separators=None, default=None)
 |      Constructor for JSONEncoder, with sensible defaults.
 |      
 |      If skipkeys is false, then it is a TypeError to attempt
 |      encoding of keys that are not str, int, float or None.  If
 |      skipkeys is True, such items are simply skipped.
 |      
 |      If ensure_ascii is true, the output is guaranteed to be str
 |      objects with all incoming non-ASCII characters escaped.  If
 |      ensure_ascii is false, the output can contain non-ASCII characters.
 |      
 |      If check_circular is true, then lists, dicts, and custom encoded
 |      objects will be checked for circular references during encoding to
 |      prevent an infinite recursion (which would cause an OverflowError).
 |      Otherwise, no such check takes place.
 |      
 |      If allow_nan is true, then NaN, Infinity, and -Infinity will be
 |      encoded as such.  This behavior is not JSON specification compliant,
 |      but is consistent with most JavaScript based encoders and decoders.
 |      Otherwise, it will be a ValueError to encode such floats.
 |      
 |      If sort_keys is true, then the output of dictionaries will be
 |      sorted by key; this is useful for regression tests to ensure
 |      that JSON serializations can be compared on a day-to-day basis.
 |      
 |      If indent is a non-negative integer, then JSON array
 |      elements and object members will be pretty-printed with that
 |      indent level.  An indent level of 0 will only insert newlines.
 |      None is the most compact representation.
 |      
 |      If specified, separators should be an (item_separator, key_separator)
 |      tuple.  The default is (', ', ': ') if *indent* is ``None`` and
 |      (',', ': ') otherwise.  To get the most compact JSON representation,
 |      you should specify (',', ':') to eliminate whitespace.
 |      
 |      If specified, default is a function that gets called for objects
 |      that can't otherwise be serialized.  It should return a JSON encodable
 |      version of the object or raise a ``TypeError``.
 |  
 |  default(self, o)
 |      Implement this method in a subclass such that it returns
 |      a serializable object for ``o``, or calls the base implementation
 |      (to raise a ``TypeError``).
 |      
 |      For example, to support arbitrary iterators, you could
 |      implement default like this::
 |      
 |          def default(self, o):
 |              try:
 |                  iterable = iter(o)
 |              except TypeError:
 |                  pass
 |              else:
 |                  return list(iterable)
 |              # Let the base class default method raise the TypeError
 |              return JSONEncoder.default(self, o)
 |  
 |  encode(self, o)
 |      Return a JSON string representation of a Python data structure.
 |      
 |      >>> from json.encoder import JSONEncoder
 |      >>> JSONEncoder().encode({""foo"": [""bar"", ""baz""]})
 |      '{""foo"": [""bar"", ""baz""]}'
 |  
 |  iterencode(self, o, _one_shot=False)
 |      Encode the given object and yield each string
 |      representation as available.
 |      
 |      For example::
 |      
 |          for chunk in JSONEncoder().iterencode(bigobject):
 |              mysocket.write(chunk)
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)
 |  
 |  ----------------------------------------------------------------------
 |  Data and other attributes defined here:
 |  
 |  item_separator = ', '
 |  
 |  key_separator = ': '
",class,"('(self, *, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, sort_keys=False, indent=None, separators=None, default=None)',)",self,,,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",int,<class 'int'>,type,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",_intstr,<slot wrapper '__str__' of 'int' objects>,wrapper_descriptor,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",tuple,<class 'tuple'>,type,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",str,<class 'str'>,type,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",list,<class 'list'>,type,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",isinstance,<built-in function isinstance>,builtin_function_or_method,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",id,<built-in function id>,builtin_function_or_method,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",_item_separator,,,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",dict,<class 'dict'>,type,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",ValueError,<class 'ValueError'>,type,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",_one_shot,,,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",_skipkeys,,,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",_sort_keys,,,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",float,<class 'float'>,type,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",_key_separator,,,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",_floatstr,,,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",_indent,,,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",_encoder,,,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",_default,,,arg_info
json,2.0.9,json.encoder._make_iterencode,encoder,_make_iterencode,"Python Library Documentation: function _make_iterencode in module json.encoder

_make_iterencode(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)
",function,"(""(markers, _default, _encoder, _indent, _floatstr, _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot, ValueError=<class 'ValueError'>, dict=<class 'dict'>, float=<class 'float'>, id=<built-in function id>, int=<class 'int'>, isinstance=<built-in function isinstance>, list=<class 'list'>, str=<class 'str'>, tuple=<class 'tuple'>, _intstr=<slot wrapper '__str__' of 'int' objects>)"",)",markers,,,arg_info
json,2.0.9,json.encoder.c_make_encoder,encoder,Encoder,"Python Library Documentation: class Encoder in module _json

class Encoder(builtins.object)
 |  _iterencode(obj, _current_indent_level) -> iterable
 |  
 |  Methods defined here:
 |  
 |  __call__(self, /, *args, **kwargs)
 |      Call self as a function.
 |  
 |  __new__(*args, **kwargs) from builtins.type
 |      Create and return a new object.  See help(type) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  default
 |      default
 |  
 |  encoder
 |      encoder
 |  
 |  indent
 |      indent
 |  
 |  item_separator
 |      item_separator
 |  
 |  key_separator
 |      key_separator
 |  
 |  markers
 |      markers
 |  
 |  skipkeys
 |      skipkeys
 |  
 |  sort_keys
 |      sort_keys
",class,"('(self, /, *args, **kwargs)',)",self,,,arg_info
json,2.0.9,json.encoder.py_encode_basestring,encoder,py_encode_basestring,"Python Library Documentation: function py_encode_basestring in module json.encoder

py_encode_basestring(s)
    Return a JSON representation of a Python string
",function,"('(s)',)",s,,,arg_info
json,2.0.9,json.encoder.py_encode_basestring_ascii,encoder,py_encode_basestring_ascii,"Python Library Documentation: function py_encode_basestring_ascii in module json.encoder

py_encode_basestring_ascii(s)
    Return an ASCII-only JSON representation of a Python string
",function,"('(s)',)",s,,,arg_info
json,2.0.9,json.scanner.c_make_scanner,scanner,Scanner,"Python Library Documentation: class Scanner in module _json

class Scanner(builtins.object)
 |  JSON scanner object
 |  
 |  Methods defined here:
 |  
 |  __call__(self, /, *args, **kwargs)
 |      Call self as a function.
 |  
 |  __new__(*args, **kwargs) from builtins.type
 |      Create and return a new object.  See help(type) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  object_hook
 |      object_hook
 |  
 |  object_pairs_hook
 |  
 |  parse_constant
 |      parse_constant
 |  
 |  parse_float
 |      parse_float
 |  
 |  parse_int
 |      parse_int
 |  
 |  strict
 |      strict
",class,"('(self, /, *args, **kwargs)',)",self,,,arg_info
json,2.0.9,json.scanner.make_scanner,scanner,Scanner,"Python Library Documentation: class Scanner in module _json

class Scanner(builtins.object)
 |  JSON scanner object
 |  
 |  Methods defined here:
 |  
 |  __call__(self, /, *args, **kwargs)
 |      Call self as a function.
 |  
 |  __new__(*args, **kwargs) from builtins.type
 |      Create and return a new object.  See help(type) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  object_hook
 |      object_hook
 |  
 |  object_pairs_hook
 |  
 |  parse_constant
 |      parse_constant
 |  
 |  parse_float
 |      parse_float
 |  
 |  parse_int
 |      parse_int
 |  
 |  strict
 |      strict
",class,"('(self, /, *args, **kwargs)',)",self,,,arg_info
json,2.0.9,json.scanner.py_make_scanner,scanner,py_make_scanner,"Python Library Documentation: function py_make_scanner in module json.scanner

py_make_scanner(context)
",function,"('(context)',)",context,,,arg_info
